package com.ydl.web.controller.hr;


import com.ydl.common.core.controller.BaseController;
import com.ydl.common.core.page.TableDataInfo;
import com.ydl.nmis.base.domain.NmisDeptDict;
import com.ydl.nmis.base.service.INmisDeptDictService;
import com.ydl.nmis.hr.domain.NmisHrBedRate;
import com.ydl.nmis.hr.domain.NmisHrUser;
import com.ydl.nmis.hr.dto.NmisHrCoat;
import com.ydl.nmis.hr.dto.NmisHrShoe;
import com.ydl.nmis.hr.dto.NmisHrTrouser;
import com.ydl.nmis.hr.service.INmisHrClothesService;
import com.ydl.nmis.hr.service.INmisHrUserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.text.DecimalFormat;
import java.util.List;


@RestController
@RequestMapping("/hr/query")
public class NmisHrStatistics extends BaseController {
    @Autowired
    private INmisHrUserService nmisHrUserService;
    @Autowired
    private INmisHrClothesService hrClothesService;
    @Autowired
    private INmisDeptDictService deptDictService;


    /**
     * 查询护理人员离职率基本信息列表
     */
    @GetMapping("/resignList")
    public TableDataInfo list(NmisHrUser nmisHrUser)
    {
        startPage();  //设置请求分页设计
        List<NmisHrUser> list = nmisHrUserService.selectNmisHrUserList(nmisHrUser);
        return getDataTable(list);
    }

    /**
     * 查询护理人员上衣统计
     */
    @GetMapping("/coatList")
    public TableDataInfo list(NmisHrCoat nmisHrCoat){
        startPage();

        List<NmisHrCoat> list = hrClothesService.selectNmisHrCoat(nmisHrCoat);
        int i = 1;
        for(NmisHrCoat nmisHrCoat1:list){
            nmisHrCoat1.setId(i);
            i++;
        }
        return getDataTable(list);
    }

    /**
     * 查询护理人员裤子统计
     */
    @GetMapping("/trouserList")
    public TableDataInfo list(NmisHrTrouser nmisHrTrouser){
        startPage();
        List<NmisHrTrouser> list = hrClothesService.selectNmisHrTrouser(nmisHrTrouser);
        int t = 1;
        for(NmisHrTrouser nmisHrTrouser1:list){
            nmisHrTrouser1.setId(t);
            t++;
        }
        return getDataTable(list);
    }

    /**
     * 查询护理人员鞋子统计
     */
    @GetMapping("/shoelist")
    public TableDataInfo list(NmisHrShoe nmisHrShoe){
        startPage();
        List<NmisHrShoe> list = hrClothesService.selectNmisHrShoe(nmisHrShoe);
        int t = 1;
        for(NmisHrShoe nmisHrShoe1:list){
            nmisHrShoe1.setId(t);
            t++;
        }
        return getDataTable(list);
    }

    /**
     * 查询科室、全院床护比
     */
    @GetMapping("/bedRateList")
    public TableDataInfo list(NmisHrBedRate nmisHrBedRate){
        startPage();
        List<NmisHrBedRate> list = hrClothesService.selectNmisHrBedRate(nmisHrBedRate);
        return getDataTable(list);
    }

    /**
     * 查询科室、全院床护比
     */
    //@PreAuthorize("@ss.hasPermi('system:dict:list')")
    @GetMapping("/bedList")
    public TableDataInfo list(NmisDeptDict nmisDeptDict)
    {
        Long bedNum = 0L;
        Long nurseNnum = 0L;

        double allBedProtectRat = 0.0;
        double bedProtectRat = 0.0;

        startPage();
        List<NmisDeptDict> list = deptDictService.selectNmisDeptDictList(nmisDeptDict);
        for(NmisDeptDict nmisDeptDict1:list){
            if(nmisDeptDict1.getActualBedNum() != null){
                bedNum += nmisDeptDict1.getActualBedNum();
            }
            if(nmisDeptDict1.getNurseNum() != null){
                nurseNnum += nmisDeptDict1.getNurseNum();
            }
        }
        for (NmisDeptDict nmisDeptDict2:list){
            nmisDeptDict2.setAllBed(bedNum);
            nmisDeptDict2.setAllNurse(nurseNnum);
            // 处理AllBedProtectRat
            if(nurseNnum != 0L){
                nmisDeptDict2.setAllBedProtectRat((double) Math.round((double) bedNum /nurseNnum *100) /100);
            }else {
                nmisDeptDict2.setAllBedProtectRat(0);
            }

            // 处理BedProtectRat
            double nurseNum = 0.0;
            double actualBedNum = 0.0;
            if(nmisDeptDict2.getNurseNum() != null){
                 nurseNum = nmisDeptDict2.getNurseNum();
            }
            if(nmisDeptDict2.getActualBedNum() != null){
                 actualBedNum = nmisDeptDict2.getActualBedNum();
            }
            if(nurseNum != 0.0 && actualBedNum != 0.0){
                nmisDeptDict2.setBedProtectRat((double) Math.round(actualBedNum/nurseNum * 100) / 100);
            } else if (nurseNum == 0.0) {
                nmisDeptDict2.setBedProtectRat(0);
            } else {
                nmisDeptDict2.setBedProtectRat(0);

            }
        }
        return getDataTable(list);
    }
}
