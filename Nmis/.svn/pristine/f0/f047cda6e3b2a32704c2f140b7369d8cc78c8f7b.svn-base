<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ydl.nmis.base.mapper.NmisCommTypeDictMapper">
    
    <resultMap type="NmisCommTypeDict" id="NmisCommTypeDictResult">
        <result property="id"    column="id"    />
        <result property="typeName"    column="type_name"    />
        <result property="inputCode"    column="input_code"    />
        <result property="serialNo"    column="serial_no"    />
        <result property="typeCode"    column="type_code"    />
    </resultMap>

    <resultMap id="NmisCommTypeDictNmisCommDictResult" type="NmisCommTypeDict" extends="NmisCommTypeDictResult">
        <collection property="nmisCommDictList" notNullColumn="sub_id" javaType="java.util.List" resultMap="NmisCommDictResult" />
    </resultMap>

    <resultMap type="NmisCommDict" id="NmisCommDictResult">
        <result property="id"    column="sub_id"    />
        <result property="itemCode"    column="sub_item_code"    />
        <result property="itemName"    column="sub_item_name"    />
        <result property="typeId"    column="sub_type_id"    />
        <result property="inputCode"    column="sub_input_code"    />
        <result property="serialNo"    column="sub_serial_no"    />
        <result property="createId"    column="sub_create_id"    />
        <result property="creator"    column="sub_creator"    />
        <result property="createDate"    column="sub_create_date"    />
        <result property="modifyId"    column="sub_modify_id"    />
        <result property="modifier"    column="sub_modifier"    />
        <result property="modifyDate"    column="sub_modify_date"    />
        <result property="unitCode"    column="sub_unit_code"    />
        <result property="delFlag"    column="sub_del_flag"    />
    </resultMap>

    <sql id="selectNmisCommTypeDictVo">
        select id, type_name, input_code, serial_no, type_code from nmis.nmis_comm_type_dict
    </sql>

    <select id="selectNmisCommTypeDictList" parameterType="NmisCommTypeDict" resultMap="NmisCommTypeDictResult">
        <include refid="selectNmisCommTypeDictVo"/>
        <where>  
        </where>
    </select>
    
    <select id="selectNmisCommTypeDictById" parameterType="Long" resultMap="NmisCommTypeDictNmisCommDictResult">
        select a.id, a.type_name, a.input_code, a.serial_no, a.type_code,
 b.id as sub_id, b.item_code as sub_item_code, b.item_name as sub_item_name, b.type_id as sub_type_id, b.input_code as sub_input_code, b.serial_no as sub_serial_no, b.create_id as sub_create_id, b.creator as sub_creator, b.create_date as sub_create_date, b.modify_id as sub_modify_id, b.modifier as sub_modifier, b.modify_date as sub_modify_date, b.unit_code as sub_unit_code, b.del_flag as sub_del_flag
        from nmis.nmis_comm_type_dict a
        left join nmis.nmis_comm_dict b on b.type_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertNmisCommTypeDict" parameterType="NmisCommTypeDict" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            select NMIS.SEQ_HR_type_dict.nextval as id from DUAL
        </selectKey>
        insert into nmis.nmis_comm_type_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="typeName != null">type_name,</if>
            <if test="inputCode != null">input_code,</if>
            <if test="serialNo != null">serial_no,</if>
            <if test="typeCode != null">type_code,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="typeName != null">#{typeName},</if>
            <if test="inputCode != null">#{inputCode},</if>
            <if test="serialNo != null">#{serialNo},</if>
            <if test="typeCode != null">#{typeCode},</if>
         </trim>
    </insert>

    <select id="selectByTypeName" resultType="NmisCommTypeDict">
        SELECT id, type_name, input_code, serial_no, type_code
        FROM nmis.nmis_comm_type_dict
        WHERE type_name = #{typeName}
    </select>

    <update id="updateNmisCommTypeDict" parameterType="NmisCommTypeDict">
        update nmis.nmis_comm_type_dict
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null">type_name = #{typeName},</if>
            <if test="inputCode != null">input_code = #{inputCode},</if>
            <if test="serialNo != null">serial_no = #{serialNo},</if>
            <if test="typeCode != null">type_code = #{typeCode},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteNmisCommTypeDictById" parameterType="Long">
        delete from nmis.nmis_comm_type_dict where id = #{id}
    </delete>

    <delete id="deleteNmisCommTypeDictByIds" parameterType="String">
        delete from nmis.nmis_comm_type_dict where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteNmisCommDictByTypeIds" parameterType="String">
        delete from nmis.nmis_comm_dict where type_id in
        <foreach item="typeId" collection="array" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </delete>

    <delete id="deleteNmisCommDictByTypeId" parameterType="Long">
        delete from nmis.nmis_comm_dict where type_id = #{typeId}
    </delete>

    <insert id="batchNmisCommDict" parameterType="list" useGeneratedKeys="false">
        insert into nmis.nmis_comm_dict( id, item_code, item_name, type_id, input_code, serial_no)
        select systemcore.create_seq_id, a.* from (
		<foreach item="item" index="index" collection="list" separator="UNION ALL">
            select #{item.itemCode} item_code,
                   #{item.itemName} item_name,
                   #{item.typeId} type_id,
                   #{item.inputCode} input_code,
                   #{item.serialNo} serial_no
            from dual
        </foreach>
        ) a
    </insert>
</mapper>