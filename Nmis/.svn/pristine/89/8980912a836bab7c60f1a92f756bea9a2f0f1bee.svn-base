package com.ydl.web.controller.schedule;


import com.ydl.common.core.controller.BaseController;
import com.ydl.common.core.domain.AjaxResult;
import com.ydl.nmis.schedule.domain.NmisScheMaster;
import com.ydl.nmis.schedule.dto.ScheGroup;
import com.ydl.nmis.schedule.mapper.ScheWeekDetail;
import com.ydl.nmis.schedule.service.ScheWeekDetailService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Calendar;
import java.util.Date;
import java.util.List;

@RestController
@RequestMapping("/schedule/week/detail")
public class ScheWeekDetailController extends BaseController{
    @Autowired
    private ScheWeekDetailService scheWeekDetailService;


/*    @GetMapping("/list")
    public ResponseEntity<List<ScheGroup>> getWeekDetail() {
        return ResponseEntity.ok(scheWeekDetailService.getAllGroups());
    }*/



    @GetMapping("/list")
    public List<ScheGroup> getWeeklySchedule(
            @RequestParam(required = false) String deptId,
            @RequestParam(required = false) @DateTimeFormat(pattern = "yyyy-MM-dd") Date startDate,
            @RequestParam(required = false) @DateTimeFormat(pattern = "yyyy-MM-dd") Date endDate
    ) {
        // 处理日期默认值：当未传日期时，默认查询本周
        if (startDate == null || endDate == null) {
            Date[] defaultWeek = getDefaultWeekRange();
            startDate = (startDate != null) ? startDate : defaultWeek[0];
            endDate = (endDate != null) ? endDate : defaultWeek[1];
        }
        return scheWeekDetailService.getAllGroups(deptId, startDate, endDate);
    }

    /**
     * 新增护理排班主
     */
    //@PreAuthorize("@ss.hasPermi('system:master:add')")
    //@Log(title = "护理排班主", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody NmisScheMaster nmisScheMaster)
    {
        return toAjax(scheWeekDetailService.insertNmisScheMaster(nmisScheMaster));
    }


    // 获取本周的起始和结束日期（周一至周日）
    private Date[] getDefaultWeekRange() {
        Calendar calendar = Calendar.getInstance();
        calendar.setFirstDayOfWeek(Calendar.MONDAY);
        calendar.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);
        Date startDate = calendar.getTime();
        calendar.add(Calendar.DATE, 6);
        Date endDate = calendar.getTime();
        return new Date[]{startDate, endDate};
    }





/*    public List<ScheGroup> getWeekDetail(){
        startPage();
        List<ScheGroup> list = scheWeekDetailService.getAllGroups();
        return list;
    }*/
}
